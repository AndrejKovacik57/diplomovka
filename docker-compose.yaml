services:
  app:
    build:
      context: backend
      dockerfile: DockerfileDev
    restart: unless-stopped
    networks:
      - docker-network
    ports:
      - "9000:9000"
    volumes:
      - ./backend/:/var/www/html/
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - db

  worker:
    build:
      context: backend
      dockerfile: DockerfileDev
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - docker-network
    volumes:
      - ./backend/:/var/www/html/
    command: php artisan queue:work --verbose --tries=3 --timeout=90

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - docker-network

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
      - "433:433"
    volumes:
      - ./diplomovka:/var/www/html
      - ./nginx-dev.conf:/etc/nginx/conf.d/default.conf
    networks:
      - docker-network
    depends_on:
      - app

  db:
    image: bitnami/postgresql:16.3.0
    platform: linux/amd64
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - db-data:/bitnami/postgresql
    environment:
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
    networks:
      - docker-network
  test-db:
    image: bitnami/postgresql:16.3.0
    platform: linux/amd64
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - test-db-data:/bitnami/postgresql
    environment:
      - POSTGRESQL_DATABASE=testing
      - POSTGRESQL_USERNAME=testing_user
      - POSTGRESQL_PASSWORD=testing_pass
    networks:
      - docker-network
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USERNAME}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - docker-network



volumes:
  db-data:
  pgadmin_data:
  test-db-data:

networks:
  docker-network:
    driver: bridge
